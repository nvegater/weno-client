# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type Experience {
  createdAt: DateTime!
  description: String!
  endDateTime: DateTime!
  eventType: ExperienceType!
  extraDates: [String!]
  id: Int!
  limitOfAttendees: Int!
  noOfAttendees: Int
  pictures: [Picture!]!
  pricePerPersonInDollars: Float!
  rRules: [String!]
  reservations: [Reservation!]
  startDateTime: DateTime!
  title: String!
  updatedAt: DateTime!
  winery: Winery!
  wineryId: Int!
}

type FieldError {
  field: String!
  message: String!
}

type Mutation {
  createWinery(
    createWineryInputs: CreateWineryInputs!
    userInputs: UserInputs!
  ): WineryResponse!
}

type Picture {
  coverPage: Boolean!
  createdAt: DateTime!
  experience: Experience!
  experienceId: Int!
  id: Float
  imageUrl: String
  updatedAt: DateTime!
}

type Query {
  allExperiences: Int!
  allPictures: Int!
  allReservations: Int!
  allWineries: Int!
  winery(creatorUsername: String!): WineryResponse!
}

type Reservation {
  createdAt: DateTime!
  endDateTime: DateTime!
  experience: Experience!
  experienceId: Int!
  id: Int!
  noOfAttendees: Int!
  orderId: String!
  paymentCreationDateTime: String!
  paymentUpdateDateTime: String!
  pricePerPersonInDollars: Float!
  startDateTime: DateTime!
  status: String!
  title: String!
  updatedAt: DateTime!
  userId: String!
}

type Winery {
  amenities: [Amenity!]
  architecturalReferences: Boolean
  contactEmail: String
  contactName: String
  contactPhoneNumber: String
  covidLabel: Boolean
  createdAt: DateTime!
  creatorEmail: String!
  creatorUsername: String!
  description: String!
  enologoName: String
  experiences: [Experience!]
  foundationYear: Int
  googleMapsUrl: String
  handicappedFriendly: Boolean
  id: Int!
  logo: String
  name: String!
  othersServices: [OtherServices!]
  petFriendly: Boolean
  postalAddress: String
  productRegion: String
  productionType: [ProductionType!]
  supportedLanguages: [ServiceLanguage!]
  updatedAt: DateTime!
  urlImageCover: String
  valley: Valley!
  verified: Boolean
  wineGrapesProduction: [Grape!]
  wineType: [TypeWine!]
  yearlyWineProduction: Int
  younerFriendly: Boolean
}

type WineryResponse {
  errors: [FieldError!]
  winery: Winery
}

"Types of wine production"
enum Amenity {
  ACTIVIDADES_EN_VINEDO
  CATAS_MARIDAJES
  CATAS_PRIVADAS
  CATA_BARRICAS
  CREA_TU_MEZCLA
  DEGUSTACION
  PASEO_CARRETA
  RECORRIDO_BODEGA
  RECORRIDO_VINEDOS
  TALLERES_DIDACTICOS
  TERRAZA
  VISITA_CAVA_BARRICAS
}

"Type of experience"
enum ExperienceType {
  CONCERT
  DEGUSTATION
  WINE_DINNER_PAIRING
}

"A winery can have one o more kind of grape"
enum Grape {
  AGLIANICO
  BARBERA
  BRUNELLO
  CABERNET_FRANC
  CABERNET_SAUVIGNON
  CARIGNAN
  CHARDONNAY
  CHENIN_BLANC
  CINSAUL
  COLOMBARD
  GEWURZTRAMINER
  GRENACHE
  GRENACHE_BLANC
  MALBEC
  MALVASIA_BLANCA
  MALVASIA_TINTA
  MERLOT
  MISION
  MONTEPULCIANO
  MOSCATEL
  MOURVEDRE
  NEBBIOLO
  OTRA
  PALOMINO
  PETITE_VERDOT
  PINOT_BLANC
  PINOT_GRIS
  PINOT_NOIR
  RIESLING
  RUBI_CABERNET
  SANGIOVESE
  SAUVIGNON_BLANC
  SEMILLON
  SINSAULT
  SYRAH
  TEMPRANILLO
  VIOGNIER
  ZINFANDEL
}

"differents kind of services"
enum OtherServices {
  BARRA_DE_ALIMENTOS
  HOSPEDAJE
  RESTAURANTE
}

"Types of wine production"
enum ProductionType {
  COMERCIAL
  ORG_BIO_NAT
  TRAD_ARTESANAL
}

"Languages supported by the Wineries"
enum ServiceLanguage {
  ALEMAN
  ESPANOL
  FRANCES
  INGLES
  ITALIANO
  JAPONES
  MANDARIN
  PORTUGUES
  SENAS_MEXICANAS
}

"Types of wine produced by a winery"
enum TypeWine {
  BIODINAMICO
  BLANCO_CON_BARRICA
  BLANCO_JOVEN
  CONMEMORATIVO_EDI_LIMITADA
  COSECHA
  DULCE
  ESPUMOSO
  EXCLUSIVO_VENTA_LOCAL
  GENEROSO_FORTIFICADO
  NARANJA
  NATURAL
  ORGANICO
  ROSADO
  TINTO_CRIANZA_BARRICA
  TINTO_JOVEN
}

"A winery is in an unique valley, valleys are not identifiable through addresses"
enum Valley {
  CALAFIA
  ENSENADA
  GRULLA
  GUADALUPE
  OJOS_NEGROS
  SANTO_TOMAS
  SAN_ANT_MINAS
  SAN_QUINTIN
  SAN_VICENTE
}

input CreateWineryInputs {
  amenities: [Amenity!]
  contactEmail: String
  contactPhoneNumber: String
  covidLabel: Boolean!
  description: String!
  foundationYear: Int
  googleMapsUrl: String
  name: String!
  productionType: [ProductionType!]!
  supportedLanguages: [ServiceLanguage!]
  valley: Valley!
  wineType: [TypeWine!]!
  yearlyWineProduction: Int
}

input UserInputs {
  email: String!
  username: String!
}

"The javascript `Date` as string. Type represents date and time as the ISO Date string."
scalar DateTime
